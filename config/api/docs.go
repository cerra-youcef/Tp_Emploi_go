// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Yanis BELDJILALI, Adel CERRA",
            "email": "beldjilaliyanis@gmail.com, cerrafr31@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/alerts": {
            "get": {
                "description": "This endpoint retrieves a list of all alerts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get all alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter alerts by UCA ID",
                        "name": "ucaID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of alerts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Alert"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint allows you to create a new alert by providing the necessary details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Create a new alert",
                "parameters": [
                    {
                        "description": "Alert object",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created alert",
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/alerts/{alertId}": {
            "get": {
                "description": "This endpoint retrieves an alert by its unique identifier (ID).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get an alert by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert found",
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "This endpoint allows you to update an alert by providing the alert ID and the fields to be updated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Update an alert by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated alert object",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Alert updated successfully"
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes an alert from the system using its unique identifier (ID).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete an alert by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "alertId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "Alert not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "This endpoint retrieves a list of all available resources.",
                "tags": [
                    "Resources"
                ],
                "summary": "Get all resources",
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Resource"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve resources",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint creates a new resource in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Create a new resource",
                "parameters": [
                    {
                        "description": "Resource object",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created resource",
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create resource",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resources/{resourceId}": {
            "get": {
                "description": "This endpoint retrieves a resource by the provided resource ID.",
                "tags": [
                    "Resources"
                ],
                "summary": "Get a resource by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource found",
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    },
                    "400": {
                        "description": "Invalid resource ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "This endpoint allows the updating of a resource based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Update an existing resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated resource object",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resource"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource successfully updated"
                    },
                    "400": {
                        "description": "Invalid request body or invalid resource ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update resource",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint allows you to delete a resource by providing the resource ID.",
                "tags": [
                    "Resources"
                ],
                "summary": "Delete a resource by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "400": {
                        "description": "Invalid resource ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Alert": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_all": {
                    "type": "boolean"
                },
                "resourceId": {
                    "type": "string"
                }
            }
        },
        "models.Resource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uca_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Config API",
	Description:      "API for managing schedules (\"resources\") and alerts in the system.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
