{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API to manage events in the timetable.",
        "title": "timetable API",
        "contact": {
            "name": "Yanis BELDJILALI, Adel CERRA",
            "email": "beldjilaliyanis@gmail.com, cerrafr31@gmail.com"
        },
        "version": "1.0.0"
    },
    "basePath": "/",
    "paths": {
        "/events": {
            "get": {
                "description": "Fetches all events from the database, or filter events by the provided resource ID if specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events or filter by resource ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid resource ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events/{eventId}": {
            "get": {
                "description": "Retrieves an event by its unique ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid Event ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Event": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description de l'événement",
                    "type": "string"
                },
                "end": {
                    "description": "Heure de fin (chaîne pour compatibilité)",
                    "type": "string"
                },
                "id": {
                    "description": "Identifiant unique généré localement",
                    "type": "string"
                },
                "location": {
                    "description": "Lieu de l'événement",
                    "type": "string"
                },
                "name": {
                    "description": "Nom de l'événement",
                    "type": "string"
                },
                "resources": {
                    "description": "ID des ressource associée",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "start": {
                    "description": "Heure de début",
                    "type": "string"
                },
                "uid": {
                    "description": "UID de l'événement",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Dernière mise à jour",
                    "type": "string"
                }
            }
        }
    }
}